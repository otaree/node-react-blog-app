// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    authError={
        Object {
            "isError": false,
            "value": "",
          }
    }
    history={
        Object {
            "push": [Function],
          }
    }
    login={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
>
        <div>
                <label>
                        Email
                </label>
                <input
                        onChange={[Function]}
                        type="email"
                        value=""
                />
        </div>
        <div>
                <label>
                        Password
                </label>
                <input
                        onChange={[Function]}
                        type="password"
                        value=""
                />
        </div>
        <div>
                <input
                        type="submit"
                        value="Submit"
                />
        </div>
</form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          <div>
            <label>
                        Email
            </label>
            <input
                        onChange={[Function]}
                        type="email"
                        value=""
            />
</div>,
          <div>
            <label>
                        Password
            </label>
            <input
                        onChange={[Function]}
                        type="password"
                        value=""
            />
</div>,
          <div>
            <input
                        type="submit"
                        value="Submit"
            />
</div>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Email
</label>,
              <input
                onChange={[Function]}
                type="email"
                value=""
/>,
              false,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Email",
              },
              "ref": null,
              "rendered": "Email",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "type": "email",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            false,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Password
</label>,
              <input
                onChange={[Function]}
                type="password"
                value=""
/>,
              false,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Password",
              },
              "ref": null,
              "rendered": "Password",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            false,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              type="submit"
              value="Submit"
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "type": "submit",
              "value": "Submit",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
>
          <div>
                    <label>
                              Email
                    </label>
                    <input
                              onChange={[Function]}
                              type="email"
                              value=""
                    />
          </div>
          <div>
                    <label>
                              Password
                    </label>
                    <input
                              onChange={[Function]}
                              type="password"
                              value=""
                    />
          </div>
          <div>
                    <input
                              type="submit"
                              value="Submit"
                    />
          </div>
</form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div>
              <label>
                            Email
              </label>
              <input
                            onChange={[Function]}
                            type="email"
                            value=""
              />
</div>,
            <div>
              <label>
                            Password
              </label>
              <input
                            onChange={[Function]}
                            type="password"
                            value=""
              />
</div>,
            <div>
              <input
                            type="submit"
                            value="Submit"
              />
</div>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Email
</label>,
                <input
                  onChange={[Function]}
                  type="email"
                  value=""
/>,
                false,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Email",
                },
                "ref": null,
                "rendered": "Email",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "type": "email",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Password
</label>,
                <input
                  onChange={[Function]}
                  type="password"
                  value=""
/>,
                false,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Password",
                },
                "ref": null,
                "rendered": "Password",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                type="submit"
                value="Submit"
/>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "type": "submit",
                "value": "Submit",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

exports[`Login when authentication Error renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    authError={
        Object {
            "isError": true,
            "value": "Authentication Fail",
          }
    }
    history={
        Object {
            "push": [Function],
          }
    }
    login={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
>
        <div>
                Authentication Fail
        </div>
        <div>
                <label>
                        Email
                </label>
                <input
                        onChange={[Function]}
                        type="email"
                        value=""
                />
        </div>
        <div>
                <label>
                        Password
                </label>
                <input
                        onChange={[Function]}
                        type="password"
                        value=""
                />
        </div>
        <div>
                <input
                        type="submit"
                        value="Submit"
                />
        </div>
</form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            Authentication Fail
</div>,
          <div>
            <label>
                        Email
            </label>
            <input
                        onChange={[Function]}
                        type="email"
                        value=""
            />
</div>,
          <div>
            <label>
                        Password
            </label>
            <input
                        onChange={[Function]}
                        type="password"
                        value=""
            />
</div>,
          <div>
            <input
                        type="submit"
                        value="Submit"
            />
</div>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Authentication Fail",
          },
          "ref": null,
          "rendered": "Authentication Fail",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Email
</label>,
              <input
                onChange={[Function]}
                type="email"
                value=""
/>,
              false,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Email",
              },
              "ref": null,
              "rendered": "Email",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "type": "email",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            false,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Password
</label>,
              <input
                onChange={[Function]}
                type="password"
                value=""
/>,
              false,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Password",
              },
              "ref": null,
              "rendered": "Password",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            false,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              type="submit"
              value="Submit"
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "type": "submit",
              "value": "Submit",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
>
          <div>
                    Authentication Fail
          </div>
          <div>
                    <label>
                              Email
                    </label>
                    <input
                              onChange={[Function]}
                              type="email"
                              value=""
                    />
          </div>
          <div>
                    <label>
                              Password
                    </label>
                    <input
                              onChange={[Function]}
                              type="password"
                              value=""
                    />
          </div>
          <div>
                    <input
                              type="submit"
                              value="Submit"
                    />
          </div>
</form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              Authentication Fail
</div>,
            <div>
              <label>
                            Email
              </label>
              <input
                            onChange={[Function]}
                            type="email"
                            value=""
              />
</div>,
            <div>
              <label>
                            Password
              </label>
              <input
                            onChange={[Function]}
                            type="password"
                            value=""
              />
</div>,
            <div>
              <input
                            type="submit"
                            value="Submit"
              />
</div>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Authentication Fail",
            },
            "ref": null,
            "rendered": "Authentication Fail",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Email
</label>,
                <input
                  onChange={[Function]}
                  type="email"
                  value=""
/>,
                false,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Email",
                },
                "ref": null,
                "rendered": "Email",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "type": "email",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  Password
</label>,
                <input
                  onChange={[Function]}
                  type="password"
                  value=""
/>,
                false,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Password",
                },
                "ref": null,
                "rendered": "Password",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                type="submit"
                value="Submit"
/>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "type": "submit",
                "value": "Submit",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
